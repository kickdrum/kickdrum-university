"use strict";(self.webpackChunkpre_kdu=self.webpackChunkpre_kdu||[]).push([["992"],{2214:function(e,t,n){n.r(t),n.d(t,{metadata:()=>i,contentTitle:()=>c,default:()=>u,assets:()=>a,toc:()=>d,frontMatter:()=>r});var i=JSON.parse('{"id":"intro-typescript/exercise","title":"Exercise","description":"Look into the /typescript folder of the Github Repository you just created. Open it using VS Code or any other editor of your choice.","source":"@site/docs/intro-typescript/exercise.md","sourceDirName":"intro-typescript","slug":"/intro-typescript/exercise","permalink":"/pre-kdu-2025/docs/intro-typescript/exercise","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Tutorials","permalink":"/pre-kdu-2025/docs/intro-typescript/tutorials"},"next":{"title":"Intro To Databases","permalink":"/pre-kdu-2025/docs/category/intro-to-databases"}}'),o=n("5893"),s=n("65");let r={sidebar_position:2},c="Exercise",a={},d=[{value:"Submissions:",id:"submissions",level:2}];function l(e){let t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"exercise",children:"Exercise"})}),"\n",(0,o.jsxs)(t.p,{children:["Look into the ",(0,o.jsx)(t.code,{children:"/typescript"})," folder of the Github Repository you just created. Open it using VS Code or any other editor of your choice."]}),"\n",(0,o.jsx)(t.p,{children:"Run this command to install necessary packages"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"npm install\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Open the ",(0,o.jsx)(t.code,{children:"q*.ts"})," files. Read the question in comment and implement it."]}),"\n",(0,o.jsx)(t.p,{children:"You can test the output of your code in the console by running"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"npm run tsc q1.ts #You can run any question file\n"})}),"\n",(0,o.jsx)(t.p,{children:"Run these individually while working on your questions."}),"\n",(0,o.jsx)(t.admonition,{type:"tip",children:(0,o.jsxs)(t.p,{children:["Feel free to checkout the ",(0,o.jsx)(t.code,{children:".test.ts"})," file to know exactly what sort of test-cases have been written and adapt your program to succeed."]})}),"\n",(0,o.jsx)(t.h2,{id:"submissions",children:"Submissions:"}),"\n",(0,o.jsxs)(t.p,{children:["Please commit all the changes to a new branch called ",(0,o.jsx)(t.code,{children:"PRE-KDU-TYPESCRIPT"})," and make sure you are inside the ",(0,o.jsx)(t.code,{children:"typescript"})," folder while doing it. Follow appropriate naming for the commit messages i.e it should begin with ",(0,o.jsx)(t.code,{children:"PRE-KDU-TYPESCRIPT: Your_commit_message"})]})]})}function u(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},65:function(e,t,n){n.d(t,{Z:function(){return c},a:function(){return r}});var i=n(7294);let o={},s=i.createContext(o);function r(e){let t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);